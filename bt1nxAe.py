-- Step 5A.1: Create a temporary table with unique patient IDs and batch numbers
CREATE OR REPLACE TEMPORARY TABLE PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BATCHES AS (
    SELECT 
        CVS_CENTR_PAT_NBR,
        NTILE(10) OVER (ORDER BY CVS_CENTR_PAT_NBR) as BATCH_ID
    FROM PL_APP_RPHAI.RAW_RPHAI.NBA5_WITH_DRUG
    GROUP BY CVS_CENTR_PAT_NBR
);

-- Step 5A.2: Create the final patient base table
CREATE OR REPLACE TABLE PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BASE (
    -- Include all columns from NBA5_WITH_DRUG plus the additional patient columns
    LIKE PL_APP_RPHAI.RAW_RPHAI.NBA5_WITH_DRUG,
    REQUEST_JSON VARIANT,
    PATIENTID NUMBER,
    PATIENT_HISTORY_LOAD_DATE DATE
);

-- Step 5A.3: Process each batch (repeat for batch_id 1 through 10)
-- Here's the template for each batch insert:

-- Batch 1
INSERT INTO PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BASE
SELECT 
    DRUG.*,
    PC.REQUEST_JSON,
    PC.PATIENTID,
    PC.LOAD_DATE as PATIENT_HISTORY_LOAD_DATE
FROM PL_APP_RPHAI.RAW_RPHAI.NBA5_WITH_DRUG DRUG
INNER JOIN PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BATCHES BATCH
    ON BATCH.CVS_CENTR_PAT_NBR = DRUG.CVS_CENTR_PAT_NBR
LEFT JOIN APP_RPHAI.CURATED_RPHAI.PATIENTCARD_JSON_HIST_V6 PC
    ON PC.PATIENTID = DRUG.CVS_CENTR_PAT_NBR
    AND PC.LOAD_DATE < DRUG.CLAIM_DT
WHERE BATCH.BATCH_ID = 1
QUALIFY ROW_NUMBER() OVER (PARTITION BY DRUG.CVS_CENTR_PAT_NBR ORDER BY PC.LOAD_DATE DESC) = 1;

-- Batch 2
INSERT INTO PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BASE
SELECT 
    DRUG.*,
    PC.REQUEST_JSON,
    PC.PATIENTID,
    PC.LOAD_DATE as PATIENT_HISTORY_LOAD_DATE
FROM PL_APP_RPHAI.RAW_RPHAI.NBA5_WITH_DRUG DRUG
INNER JOIN PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BATCHES BATCH
    ON BATCH.CVS_CENTR_PAT_NBR = DRUG.CVS_CENTR_PAT_NBR
LEFT JOIN APP_RPHAI.CURATED_RPHAI.PATIENTCARD_JSON_HIST_V6 PC
    ON PC.PATIENTID = DRUG.CVS_CENTR_PAT_NBR
    AND PC.LOAD_DATE < DRUG.CLAIM_DT
WHERE BATCH.BATCH_ID = 2
QUALIFY ROW_NUMBER() OVER (PARTITION BY DRUG.CVS_CENTR_PAT_NBR ORDER BY PC.LOAD_DATE DESC) = 1;

-- Continue with batches 3-10 following the same pattern

-- Step 5A.4: Validate batch results
SELECT 
    COUNT(*) as total_records,
    COUNT(DISTINCT CVS_CENTR_PAT_NBR) as unique_patients,
    COUNT(REQUEST_JSON) as records_with_history
FROM PL_APP_RPHAI.RAW_RPHAI.NBA5_PATIENT_BASE;
